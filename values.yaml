volumes:
  persistence: true
  local_storage: false

zookeeper:
  replicaCount: 3

bookkeeper:
  replicaCount: 3
  volumes:
    ledgers:
      name: ledgers
      size: 20Gi

broker:
  replicaCount: 3

proxy:
  replicaCount: 3
  service:
    type: NodePort
  ports:
    https_nodeport: 32123
    pulsarssl_nodeport: 32651

grafana:
  service:
    type: NodePort

rbac:
  enabled: true
  psp: true
  limit_to_namespace: true

tls:
  enabled: true
  ca_suffix: ca-tls
  # common settings for generating certs
  common:
    # 90d
    duration: 2160h
    # 15d
    renewBefore: 360h
    organization:
      - pulsar
    keySize: 4096
    keyAlgorithm: rsa
    keyEncoding: pkcs8
  # settings for generating certs for proxy
  proxy:
    enabled: true
    cert_name: tls-proxy
  # settings for generating certs for broker
  broker:
    enabled: true
    cert_name: tls-broker
  # settings for generating certs for bookies
  bookie:
    enabled: true
    cert_name: tls-bookie
  # settings for generating certs for zookeeper
  zookeeper:
    enabled: true
    cert_name: tls-zookeeper
  # settings for generating certs for recovery
  autorecovery:
    cert_name: tls-recovery
  # settings for generating certs for toolset
  toolset:
    cert_name: tls-toolset

# enable TLS
tls:
  enabled: true
  proxy:
    enabled: true
  broker:
    enabled: true
  zookeeper:
    enabled: true
  # common settings for generating certs
  common:
    # 90d
    duration: 2160h
    # 15d
    renewBefore: 360h
    organization:
      - pulsar
    keySize: 4096
    keyAlgorithm: RSA
    keyEncoding: PKCS8

# issue selfsigning certs
certs:
  internal_issuer:
    enabled: true
    component: internal-cert-issuer
    type: selfsigned

auth:
  authentication:
    enabled: true
    provider: "jwt"
    jwt:
      # Enable JWT authentication
      # If the token is generated by a secret key, set the usingSecretKey as true.
      # If the token is generated by a private key, set the usingSecretKey as false.
      usingSecretKey: true
  authorization:
    enabled: true
  superUsers:
    # broker to broker communication
    broker: "broker-admin"
    # proxy to broker communication
    proxy: "proxy-admin"
    # pulsar-admin client to broker/proxy communication
    client: "admin"
